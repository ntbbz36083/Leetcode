71. Simplify Path
https://leetcode.com/problems/simplify-path/
class Solution:
    def simplifyPath(self, path: str) -> str:
        path = path.split('/')
        stack = []
        i = 0
        while i < len(path):
            cur = path[i]
            if cur not in ['', '.', '..']:
                stack.append(cur)
                i += 1
            elif stack and cur == '..':
                stack.pop()
                i += 1
            else:
                i += 1
        return '/'+'/'.join(stack)

1544. Make The String Great
https://leetcode.com/problems/make-the-string-great/
class Solution:
    def makeGood(self, s: str) -> str:
        res = []
        for i in s:
            if not res:
                res.append(i)
            elif res[-1].isupper() and res[-1].lower() == i:
                res.pop()
            elif res[-1].islower() and res[-1].upper() == i:
                res.pop()
            else:
                res.append(i)
        return ''.join(res)
